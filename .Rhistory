{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 100
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 100
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 1000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 1000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 1000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 1000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp((exponents[i]/k))
}
expected_value_squared <- sum_of_e^2 / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp((exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
variance <- expected_value_squared - (expected_value^2)
variance
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(exponents[i]/k)
}
expected_value <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value
(((exp(1)-exp(1/1000)+1)^2)-1) / 12
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
TOTAL_NUMBER_OF_GAMES <- 10000
TOTAL_NUMBER_OF_COIN_TOSSES <- 100
get_total_number_tom_wins = function(n_simulated_games){
#Setting a counter to count the times tom wins
total_number_of_tom_wins <- 0
for(col in 1:ncol(n_simulated_games)) {
#re-initializing amounts for both gamblers
tom = 5
jerry = 2
for(row in 1:nrow(n_simulated_games)) {
#Step 1) Decrease either tom or jerry
if(n_simulated_games[row, col] == 1){
tom = tom + 1
jerry = jerry - 1
}else{
tom = tom - 1
jerry = jerry + 1
}
#Step 2) Stop game, when one losses
if(tom == 0){
break;
}else
if(jerry == 0){
total_number_of_tom_wins = total_number_of_tom_wins + 1
break;
}
}
}
return(total_number_of_tom_wins)
}
probability <- c(.5, .5)
n_simulated_games <- as.matrix(replicate(TOTAL_NUMBER_OF_GAMES,
sample(0:1, TOTAL_NUMBER_OF_COIN_TOSSES,
replace = TRUE,
prob = probability)))
wins <- get_total_number_tom_wins(n_simulated_games)
probability_tom_wins <- wins / TOTAL_NUMBER_OF_GAMES
probability_tom_wins
probability <- c(.8, .2)
n_simulated_games <- as.matrix(replicate(TOTAL_NUMBER_OF_GAMES,
sample(0:1, TOTAL_NUMBER_OF_COIN_TOSSES,
replace = TRUE,
probability)))
wins <- get_total_number_tom_wins(n_simulated_games)
probability_tom_wins <- wins / TOTAL_NUMBER_OF_GAMES
probability_tom_wins
(exp(1) + exp(1/1000)) / 2
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(exponents[i]/k)
}
expected_value <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value
(((exp(1)-exp(1/1000)+1)^2)-1) / 12
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
knitr::opts_chunk$set(comment = NA, prompt = TRUE, collapse = TRUE)
(((exp(1))^2)-1) / 12
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
(((exp(1))^2)-1) / 12
(((exp(1)-exp(1/1000)+1)^2)-1) / 12
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
TOTAL_NUMBER_OF_DRAWS <- 10000
k <- 1000
sum_of_e <- 0
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(exponents[i]/k)
}
expected_value <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value
knitr::opts_chunk$set(comment = NA, prompt = TRUE, collapse = TRUE)
#i <- 0:5; sum(i^2)
X_i <- 1:1000
k <- 1000
expected_value_defition = sum(exp(X_i/k))
expected_value_defition
#i <- 0:5; sum(i^2)
X_i <- 1:1000
k <- 1000
expected_value_defition = sum(exp(X_i/k)/k)
expected_value_defition
#i <- 0:5; sum(i^2)
X_i <- 1:1000
k <- 1000
expected_value_defition = sum(exp(2*X_i/k)/k)
expected_value_defition
#i <- 0:5; sum(i^2)
X_i <- 1:1000
k <- 1000
expected_value_defition = sum(exp(X_i/k)/k)
expected_value_defition
X_i <- 1:1000
k <- 1000
expected_value_squared_defition = (sum(exp(X_i/k)/k)^2)
variance_definition <- expected_value_squared_defition - (expected_value_defition ^ 2)
variance_definition
X_i <- 1:1000
k <- 1000
expected_value_squared_defition = (sum(exp(X_i/k)/k)^2)
variance_definition <- expected_value_squared_defition - (expected_value_defition *expected_value_defition )
variance_definition
X_i <- 1:1000
k <- 1000
expected_value_squared_defition = sum(exp(2* X_i/k)/k)
variance_definition <- expected_value_squared_defition - (expected_value_defition ^ 2)
variance_definition
k <- 1000
sum_of_e <- 0
set.seed(123456789)
exponents <- replicate(TOTAL_NUMBER_OF_DRAWS,sample(1:k, 1, replace = TRUE))
for(i in 1:TOTAL_NUMBER_OF_DRAWS)
{
sum_of_e = sum_of_e + exp(2*(exponents[i]/k))
}
expected_value_squared <- sum_of_e / TOTAL_NUMBER_OF_DRAWS
expected_value_squared
variance <- expected_value_squared - (expected_value^2)
variance
